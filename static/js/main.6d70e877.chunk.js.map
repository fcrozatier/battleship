{"version":3,"sources":["components/Ship.jsx","components/Cell.jsx","modules/Ship.js","modules/Gameboard.js","components/Board.jsx","modules/Player.js","modules/useGame.js","components/ChoosePlayers.jsx","components/Feedback.jsx","components/DashBoard.jsx","App.jsx","index.jsx"],"names":["Ship","dnd","unit","canRotate","rotate","useDrag","item","type","id","ship","collect","monitor","isDragging","drag","dndFeatures","ref","onDoubleClick","style","v","width","height","length","top","left","display","className","color","fontSize","position","defaultProps","Cell","drawShip","hit","onClick","onDrop","onCanDrop","onCanRotate","onRotate","useDrop","accept","drop","canDrop","isOver","classes","backgroundColor","onKeyDown","role","tabIndex","Math","random","hits","isSunk","size","fleet","createBoard","board","Array","fill","forEach","index","canHPosition","endIdx","floor","canVPosition","end","push","canReposition","find","reposition","idx","randomize","map","tried","receiveAttack","shipId","fleetSunk","every","shipsLeft","reduce","partial","current","unitIndices","positions","i","carrier","battleship","destroyer","submarine","patrol","Board","boardInit","gameboard","updateBoard","cell","includes","handleDrop","handleRotate","drawBoard","Gameboard","isBot","name","remainingSlots","from","keys","landedHits","validAttack","player","attackPosition","hitUnit","splice","indexOf","landedIndices","landed","Object","values","arr","val","hasAdjacentLanding","first","j","other","abs","pickRandom","pickAdjacent","directions","randomLanded","filter","el","isLandedCell","pickNeighbour","a","b","direction","inf","sup","AIAttack","pass","adj","hasLost","attack","humanPass","useGame","useState","players","setPlayers","gameboards","setGameboards","Player","player1","setPlayer1","player2","setPlayer2","player1Turn","setPlayer1Turn","message","setMessage","switchPlayers","prev","winner","reset","num","gameEnded","player2Pass","playing","opponent","setMap","keepPlaying","ChoosePlayers","Feedback","info","DashBoard","handleClick","App","setGame","loading","setLoading","count","setCount","initializeGame","updatePlayerBoard","counterId","setInterval","setTimeout","clearInterval","countingDown","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.6d70e877.chunk.js","sourcesContent":["import React from \"react\";\nimport { PropTypes, bool } from \"prop-types\";\nimport { useDrag } from \"react-dnd\";\nimport { GiAnticlockwiseRotation } from \"react-icons/gi\";\n\nfunction Ship({ dnd, unit, canRotate, rotate }) {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: \"ship\", id: unit.ship.id },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  const dndFeatures = dnd ? { ref: drag, onDoubleClick: () => rotate() } : {};\n\n  let style = unit.v\n    ? {\n        width: \"80%\",\n        height: `${unit.ship.length * (40 + 3) - 10}px`,\n        top: \"10%\",\n        left: \"10%\",\n      }\n    : {\n        width: `${unit.ship.length * (40 + 3) - 10}px`,\n        height: \"80%\",\n        top: \"10%\",\n        left: \"10%\",\n      };\n\n  style = isDragging ? { ...style, display: \"none\" } : style;\n\n  return (\n    <div style={style} className=\"ship\" {...dndFeatures}>\n      {dnd && canRotate && (\n        <GiAnticlockwiseRotation\n          style={{\n            color: \"#fff\",\n            fontSize: \"22px\",\n            position: \"relative\",\n            top: \"-3px\",\n            left: \"5px\",\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nShip.propTypes = {\n  dnd: PropTypes.bool,\n  canRotate: bool,\n  rotate: PropTypes.func,\n  unit: PropTypes.shape({\n    index: PropTypes.number,\n    // eslint-disable-next-line react/forbid-prop-types\n    ship: PropTypes.object,\n    v: PropTypes.bool,\n  }),\n};\n\nShip.defaultProps = {\n  dnd: false,\n  canRotate: false,\n  rotate: () => {},\n  unit: {},\n};\n\nexport default Ship;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDrop } from \"react-dnd\";\nimport Ship from \"./Ship\";\n\nfunction Cell({\n  unit,\n  drawShip,\n  hit,\n  onClick,\n  dnd,\n  onDrop,\n  onCanDrop,\n  onCanRotate,\n  onRotate,\n}) {\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"ship\",\n    drop: (item) => {\n      onDrop(item.id);\n    },\n    canDrop: (item) => onCanDrop(item.id),\n    collect: (monitor) => ({\n      canDrop: !!monitor.canDrop(),\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  let classes = \"cell\";\n  classes += drawShip ? \" draw-ship\" : \"\";\n  classes += hit ? \" hit\" : \"\";\n\n  const style = {\n    backgroundColor:\n      (!isOver && canDrop && \"hsl(150deg 100% 96%)\") ||\n      (isOver && canDrop && \"hsl(150deg 100% 90%)\") ||\n      (isOver && !canDrop && \"hsl(0deg 100% 96%)\"),\n  };\n\n  return (\n    <div\n      ref={drop}\n      style={style}\n      className={classes}\n      onClick={onClick}\n      onKeyDown={onClick}\n      role=\"button\"\n      tabIndex=\"-1\"\n    >\n      {unit !== null && (\n        <Ship\n          dnd={dnd}\n          unit={unit}\n          canRotate={onCanRotate(unit.ship.id)}\n          rotate={() => onRotate(unit.ship.id)}\n        />\n      )}\n    </div>\n  );\n}\n\nCell.propTypes = {\n  unit: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  drawShip: PropTypes.bool,\n  hit: PropTypes.bool,\n  onClick: PropTypes.func,\n  dnd: PropTypes.bool,\n  onCanDrop: PropTypes.func,\n  onCanRotate: PropTypes.func,\n  onDrop: PropTypes.func,\n  onRotate: PropTypes.func,\n};\n\nCell.defaultProps = {\n  unit: false,\n  drawShip: false,\n  hit: false,\n  dnd: false,\n  onClick: () => {},\n  onCanDrop: () => {},\n  onCanRotate: () => {},\n  onDrop: () => {},\n  onRotate: () => {},\n};\n\nexport default Cell;\n","export default (length, id = Math.random() * 100) => {\n  let hits = 0;\n\n  const hit = () => {\n    hits += 1;\n  };\n\n  const isSunk = () => hits >= length;\n\n  return {\n    id,\n    isSunk,\n    hit,\n    hits,\n    length,\n  };\n};\n","/* eslint-disable no-restricted-syntax */\nimport Ship from \"./Ship\";\n\nexport default (size = 10) => {\n  const hits = [];\n  const fleet = [];\n\n  const createBoard = () => {\n    const board = Array(size * size).fill(null);\n    fleet.forEach((unit) => {\n      board[unit.index] = unit;\n    });\n    return board;\n  };\n\n  const canHPosition = (index, ship) => {\n    const endIdx = index + ship.length - 1;\n\n    // Cannot position outside grid\n    if (endIdx >= size ** 2) return false;\n\n    // Cannot wrap\n    if (Math.floor(index / size) !== Math.floor(endIdx / size)) return false;\n\n    // Check positions are free\n    for (const unit of fleet) {\n      // for other horizontal, head or tail of ship should not end in their middle of these\n      if (unit.ship.id !== ship.id && !unit.v) {\n        if (unit.index <= index && unit.index + unit.ship.length - 1 >= index) {\n          return false;\n        }\n        if (unit.index >= index && unit.index <= endIdx) {\n          return false;\n        }\n      } else if (unit.ship.id !== ship.id && unit.v) {\n        // for other vertical, their head modulo size should not be in the middle of ship\n        if (\n          unit.index <= index &&\n          unit.index + (unit.ship.length - 1) * size >= index\n        ) {\n          if (\n            index % size <= unit.index % size &&\n            endIdx % size >= unit.index % size\n          ) {\n            return false;\n          }\n        }\n        if (\n          unit.index <= endIdx &&\n          unit.index + (unit.ship.length - 1) * size >= endIdx\n        ) {\n          if (\n            index % size <= unit.index % size &&\n            endIdx % size >= unit.index % size\n          ) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  const canVPosition = (index, ship) => {\n    const end = index + (ship.length - 1) * size;\n\n    // Cannot position outside grid\n    if (end >= size ** 2) {\n      return false;\n    }\n\n    // Check positions are free\n    for (const unit of fleet) {\n      // for other vertical, should not be aligned with head of tail of ship in their middle\n      if (unit.ship.id !== ship.id && unit.v) {\n        if (unit.index % size === index % size) {\n          if (\n            unit.index <= index &&\n            unit.index + (unit.ship.length - 1) * size >= index\n          ) {\n            return false;\n          }\n          if (unit.index >= index && unit.index <= end) {\n            return false;\n          }\n        }\n      } else if (unit.ship.id !== ship.id && !unit.v) {\n        // for other horizontal, their head or tail modulo size should not surround index\n        if (index <= unit.index && unit.index <= end) {\n          if (\n            unit.index % size <= index % size &&\n            index % size <= (unit.index + unit.ship.length - 1) % size\n          ) {\n            return false;\n          }\n        }\n        if (\n          index <= unit.index + unit.ship.length - 1 &&\n          unit.index + unit.ship.length - 1 <= end\n        ) {\n          if (\n            unit.index % size <= index % size &&\n            index % size <= (unit.index + unit.ship.length - 1) % size\n          ) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  const position = (index, ship, v = false) => {\n    if ((v && canVPosition(index, ship)) || (!v && canHPosition(index, ship))) {\n      fleet.push({ ship, index, v });\n    }\n  };\n\n  const canReposition = (index, id) => {\n    const { ship, v } = fleet.find((unit) => unit.ship.id === id);\n    return (\n      (v && canVPosition(index, ship)) || (!v && canHPosition(index, ship))\n    );\n  };\n\n  const reposition = (index, id) => {\n    if (canReposition(index, id)) {\n      fleet.forEach((unit, idx) => {\n        if (unit.ship.id === id) {\n          fleet[idx].index = index;\n        }\n      });\n    }\n    return fleet;\n  };\n\n  const canRotate = (id) => {\n    const { index, ship, v } = fleet.find((unit) => unit.ship.id === id);\n    return (\n      (v && canHPosition(index, ship)) || (!v && canVPosition(index, ship))\n    );\n  };\n\n  const rotate = (id) => {\n    if (canRotate(id)) {\n      fleet.forEach((unit, idx) => {\n        if (unit.ship.id === id) {\n          fleet[idx].v = !fleet[idx].v;\n        }\n      });\n    }\n    return fleet;\n  };\n\n  const randomize = () => {\n    fleet.forEach((unit, idx) => {\n      const v = !!Math.floor(Math.random() * 2);\n      const map = v ? canVPosition : canHPosition;\n      let index;\n      let tried = 0;\n      do {\n        tried += 1;\n        index = Math.floor(Math.random() * size ** 2);\n      } while (!map(index, unit.ship) || tried <= 100);\n      if (map(index, unit.ship)) {\n        fleet[idx].v = v;\n        fleet[idx].index = index;\n      }\n    });\n    return this;\n  };\n\n  const receiveAttack = (index) => {\n    for (const unit of fleet) {\n      if (\n        !unit.v &&\n        unit.index <= index &&\n        index <= unit.index + unit.ship.length - 1\n      ) {\n        unit.ship.hit();\n        hits.push(index);\n        return unit.ship.id;\n      }\n      if (\n        unit.v &&\n        index % size === unit.index % size &&\n        unit.index <= index &&\n        index <= unit.index + (unit.ship.length - 1) * size\n      ) {\n        unit.ship.hit();\n        hits.push(index);\n        return unit.ship.id;\n      }\n    }\n    hits.push(index);\n    return false;\n  };\n\n  const isSunk = (shipId) =>\n    fleet.find((unit) => unit.ship.id === shipId).ship.isSunk();\n\n  const fleetSunk = () => fleet.every((unit) => unit.ship.isSunk());\n\n  const shipsLeft = () =>\n    fleet.reduce(\n      (partial, current) => partial - current.ship.isSunk(),\n      fleet.length,\n    );\n\n  const unitIndices = () => {\n    const positions = [];\n    fleet.forEach((unit) => {\n      for (let i = 0; i < unit.ship.length; i += 1) {\n        const index = unit.v ? unit.index + i * size : unit.index + i;\n        positions.push(index);\n      }\n    });\n    return positions;\n  };\n\n  // default config\n  if (size >= 7) {\n    const carrier = Ship(5, \"carrier\");\n    const battleship = Ship(4, \"battleship\");\n    const destroyer = Ship(3, \"destroyer\");\n    const submarine = Ship(3, \"submarine\");\n    const patrol = Ship(2, \"patrol\");\n\n    position(22, carrier, true);\n    position(4, battleship);\n    position(55, destroyer);\n    position(1, submarine, true);\n    position(36, patrol, true);\n    randomize();\n  }\n\n  return {\n    canReposition,\n    canRotate,\n    createBoard,\n    fleet,\n    fleetSunk,\n    hits,\n    isSunk,\n    position,\n    randomize,\n    receiveAttack,\n    reposition,\n    rotate,\n    shipsLeft,\n    unitIndices,\n  };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Cell from \"./Cell\";\nimport Gameboard from \"../modules/Gameboard\";\n\nconst Board = ({ boardInit, dnd, gameboard, onClick, updateBoard }) => {\n  const handleDrop = (i, id) => {\n    updateBoard({ ...gameboard, fleet: gameboard.reposition(i, id) });\n  };\n\n  const handleRotate = (id) => {\n    updateBoard({ ...gameboard, fleet: gameboard.rotate(id) });\n  };\n\n  const handleRandom = () => {\n    updateBoard({ ...gameboard, fleet: gameboard.randomize() });\n  };\n\n  const drawBoard = () => {\n    const board = gameboard.createBoard();\n    const { hits } = gameboard;\n    return board.map((cell, i) => (\n      <Cell\n        key={Math.random() * 1000}\n        unit={cell}\n        drawShip={gameboard.unitIndices().includes(i)}\n        hit={hits.includes(i)}\n        onClick={() => {\n          onClick(i);\n        }}\n        dnd={dnd}\n        onDrop={(id) => handleDrop(i, id)}\n        onCanDrop={(id) => gameboard.canReposition(i, id)}\n        onCanRotate={(id) => gameboard.canRotate(id)}\n        onRotate={(id) => handleRotate(id)}\n      />\n    ));\n  };\n\n  return (\n    <>\n      <div className={`board-grid ${dnd ? \"dnd-board\" : \"\"}`}>\n        {drawBoard()}\n      </div>\n      {dnd && (\n        <div className=\"btn-wrapper\">\n          <div className=\"btn-container\">\n            <button className=\"btn\" type=\"button\" onClick={handleRandom}>\n              Random\n            </button>\n          </div>\n\n          <div className=\"btn-container\">\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={() => boardInit(gameboard)}\n            >\n              Continue\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nBoard.propTypes = {\n  boardInit: PropTypes.func,\n  dnd: PropTypes.bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  gameboard: PropTypes.object,\n  onClick: PropTypes.func,\n  updateBoard: PropTypes.func,\n};\n\nBoard.defaultProps = {\n  boardInit: () => {},\n  dnd: false,\n  gameboard: Gameboard(),\n  onClick: () => {},\n  updateBoard: () => {},\n};\n\nexport default Board;\n","import Gameboard from \"./Gameboard\";\n\nexport default (id = Math.random() * 10, gameboard = Gameboard()) => {\n  const isBot = id === \"AI\";\n  const name = id;\n  const remainingSlots = Array.from(new Array(100).keys());\n  const landedHits = {};\n\n  const validAttack = (player, index) => !player.gameboard.hits.includes(index);\n\n  function attackPosition(player, index) {\n    const hitUnit = player.gameboard.receiveAttack(index);\n    if (hitUnit) {\n      landedHits[hitUnit] = landedHits[hitUnit]\n        ? [...landedHits[hitUnit], index]\n        : [index];\n      if (player.gameboard.isSunk(hitUnit)) {\n        delete landedHits[hitUnit];\n      }\n    }\n    remainingSlots.splice(remainingSlots.indexOf(index), 1);\n  }\n\n  const landedIndices = () => {\n    const landed = [];\n    Object.values(landedHits).forEach((arr) =>\n      arr.forEach((val) => landed.push(val)),\n    );\n    return landed;\n  };\n\n  const hasAdjacentLanding = () => {\n    const landed = landedIndices();\n    for (let i = 0; i < landed.length; i += 1) {\n      const first = landed[i];\n      for (let j = i + 1; j < landed.length; j += 1) {\n        const other = landed[j];\n        if (Math.abs(other - first) === 1 || Math.abs(other - first) === 10) {\n          return [first, other];\n        }\n      }\n    }\n    return false;\n  };\n\n  const pickRandom = () =>\n    remainingSlots[Math.floor(Math.random() * remainingSlots.length)];\n\n  const pickAdjacent = () => {\n    let directions = [-1, 1, -10, 10];\n    const landed = landedIndices();\n    let i;\n    do {\n      const randomLanded = landed[Math.floor(Math.random() * landed.length)];\n\n      // if random choice is in top row\n      if (Math.floor(randomLanded / 10) === 0) {\n        directions = directions.filter((el) => el !== -10);\n      }\n      // if random choice is in bottom row\n      if (Math.floor(randomLanded / 10) === 9) {\n        directions = directions.filter((el) => el !== 10);\n      }\n      // if random choice is in left  column\n      if (randomLanded % 10 === 0) {\n        directions = directions.filter((el) => el !== -1);\n      }\n      // if random choice is in left  column\n      if (randomLanded % 10 === 9) {\n        directions = directions.filter((el) => el !== 1);\n      }\n      const randomDirection =\n        directions[Math.floor(Math.random() * directions.length)];\n      i = randomLanded + randomDirection;\n    } while (!remainingSlots.includes(i));\n    return i;\n  };\n\n  const isLandedCell = (index) => landedIndices().includes(index);\n\n  const pickNeighbour = ([a, b]) => {\n    const direction = Math.abs(b - a);\n    let inf = a;\n    let sup = b;\n    while (isLandedCell(sup)) {\n      sup += direction;\n    }\n    while (isLandedCell(inf)) {\n      inf -= direction;\n    }\n    if (remainingSlots.includes(inf)) return inf;\n    if (remainingSlots.includes(sup)) return sup;\n    return pickAdjacent(inf + direction);\n  };\n\n  function AIAttack(player, pass) {\n    if (pass) return player.gameboard;\n\n    let index;\n    const adj = hasAdjacentLanding();\n\n    if (Object.keys(landedHits).length === 0) {\n      index = pickRandom();\n    } else if (adj) {\n      index = pickNeighbour(adj);\n    } else {\n      index = pickAdjacent();\n    }\n    attackPosition(player, index);\n  }\n\n  const hasLost = () => gameboard.fleetSunk();\n\n  const attack = (player, ...opts) => {\n    if (hasLost()) return player.gameboard;\n\n    if (isBot) {\n      AIAttack(player, opts[0]);\n    } else {\n      const humanPass = opts[1] ? opts[1] : false;\n      if (!humanPass && validAttack(player, opts[0])) {\n        attackPosition(player, opts[0]);\n      }\n    }\n    return player.gameboard;\n  };\n\n  return {\n    attack,\n    isBot,\n    hasLost,\n    gameboard,\n    name,\n    validAttack,\n  };\n};\n","import { useState } from \"react\";\nimport Player from \"./Player\";\n\nconst useGame = () => {\n  const [players, setPlayers] = useState(0);\n  const [gameboards, setGameboards] = useState(0);\n  const [player1, setPlayer1] = useState(Player(\"Player1\"));\n  const [player2, setPlayer2] = useState(\n    Player(players === 2 ? \"Player2\" : \"AI\"),\n  );\n  const [player1Turn, setPlayer1Turn] = useState(true);\n  const [message, setMessage] = useState(\"\");\n\n  const reset = (num) => {\n    setPlayers(num);\n    setGameboards(0);\n    setPlayer1(Player(\"Player1\"));\n    setPlayer2(Player(num === 2 ? \"Player2\" : \"AI\"));\n    setPlayer1Turn(true);\n  };\n\n  const switchPlayers = () => {\n    setPlayer1Turn((prev) => !prev);\n  };\n\n  const winner = () => {\n    if (player2.hasLost()) return player1.name;\n    if (player1.hasLost()) return player2.name;\n    return false;\n  };\n\n  const setGame = (index) => {\n    const gameEnded = !!winner();\n    if (players === 1) {\n      const player2Pass = !player1.validAttack(player2, index) || gameEnded;\n      setMessage(player2Pass ? \"Try again!\" : \"\");\n      setPlayer2({\n        ...player2,\n        gameboard: player1.attack(player2, index, gameEnded),\n      });\n      setPlayer1({\n        ...player1,\n        gameboard: player2.attack(player1, player2Pass),\n      });\n    } else if (players === 2) {\n      const playing = player1Turn ? player1 : player2;\n      const opponent = player1Turn ? player2 : player1;\n      const setMap = player1Turn ? setPlayer2 : setPlayer1;\n      const keepPlaying = !playing.validAttack(opponent, index);\n      setMessage(keepPlaying ? \"Try again!\" : \"\");\n      setMap({\n        ...opponent,\n        gameboard: playing.attack(opponent, index, gameEnded),\n      });\n      if (!keepPlaying && !winner()) switchPlayers();\n    }\n  };\n\n  return [\n    {\n      gameboards,\n      message,\n      players,\n      player1,\n      player2,\n      player1Turn,\n      reset,\n      setGameboards,\n      setPlayers,\n      setPlayer1,\n      setPlayer2,\n      switchPlayers,\n      winner,\n    },\n    setGame,\n  ];\n};\n\nexport default useGame;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ChoosePlayers({ onClick }) {\n  return (\n    <div className=\"btn-wrapper\">\n      <div className=\"btn-container\">\n        <button className=\"btn\" type=\"button\" onClick={() => onClick(1)}>\n          1 Player\n        </button>\n      </div>\n      <div className=\"btn-container\">\n        <button className=\"btn\" type=\"button\" onClick={() => onClick(2)}>\n          2 Players\n        </button>\n      </div>\n    </div>\n  );\n}\n\nChoosePlayers.propTypes = {\n  onClick: PropTypes.func,\n};\n\nChoosePlayers.defaultProps = {\n  onClick: () => {},\n};\n\nexport default ChoosePlayers;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Feedback({ players, gameboards, info, player1Turn, winner }) {\n  let message;\n  if (!players) {\n    message = <h2 className=\"heading\">Battlefied</h2>;\n  } else if (players && gameboards !== players) {\n    message = (\n      <>\n        <h2 className=\"heading\">\n          Player\n          {gameboards + 1}\n          {\": \"}\n          place your ships\n        </h2>\n        <div className=\"info-wrapper\">\n          <ul className=\"info\">\n            <li>Drag&apos;n drop to move</li>\n            <li>Double click to rotate</li>\n          </ul>\n        </div>\n      </>\n    );\n  } else if (players && gameboards === players && !winner) {\n    message = (\n      <>\n        <h2 className=\"heading\">\n          Player\n          {player1Turn ? \"1 \" : \"2 \"}\n          turn\n        </h2>\n        <p className=\"info-wrapper\">{info}</p>\n      </>\n    );\n  } else if (winner) {\n    message = (\n      <>\n        <h2 className=\"heading\">{`${winner} wins`}</h2>\n        <small className=\"info-wrapper\">Click below to rematch</small>\n      </>\n    );\n  }\n  return <header className=\"feedback\">{message}</header>;\n}\n\nFeedback.propTypes = {\n  gameboards: PropTypes.number,\n  info: PropTypes.string,\n  player1Turn: PropTypes.bool,\n  players: PropTypes.number,\n  winner: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nFeedback.defaultProps = {\n  gameboards: 0,\n  info: \"\",\n  player1Turn: true,\n  players: 0,\n  winner: false,\n};\n\nexport default Feedback;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Board from \"./Board\";\n\nfunction DashBoard({ player1, player2, player1Turn, handleClick }) {\n  return (\n    <div className=\"display-boards\">\n      <div className={`${player1Turn ? \"my-board\" : \"enemy-board\"}`}>\n        <div className=\"whose-board\">{`${player1.name} board`}</div>\n        <Board gameboard={player1.gameboard} onClick={handleClick} />\n        <div className=\"info\">\n          Ships left:\n          <span style={{ color: \"var(--info)\" }}>\n            {player1.gameboard.shipsLeft()}\n          </span>\n        </div>\n      </div>\n      <div className={`${player1Turn ? \"enemy-board\" : \"my-board\"}`}>\n        <div className=\"whose-board\">{`${player2.name} board`}</div>\n        <Board gameboard={player2.gameboard} onClick={handleClick} />\n        <div className=\"info\">\n          Ships left:\n          <span style={{ color: \"var(--info)\" }}>\n            {player2.gameboard.shipsLeft()}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nDashBoard.propTypes = {\n  player1Turn: PropTypes.bool,\n  player1: PropTypes.shape().isRequired,\n  player2: PropTypes.shape().isRequired,\n  handleClick: PropTypes.func,\n};\n\nDashBoard.defaultProps = {\n  player1Turn: true,\n  handleClick: () => {},\n};\n\nexport default DashBoard;\n","import React, { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport useGame from \"./modules/useGame\";\nimport ChoosePlayers from \"./components/ChoosePlayers\";\nimport Feedback from \"./components/Feedback\";\nimport Player from \"./modules/Player\";\nimport DashBoard from \"./components/DashBoard\";\nimport \"./app.css\";\n\nfunction App() {\n  const [\n    {\n      gameboards,\n      message,\n      players,\n      player1,\n      player2,\n      player1Turn,\n      reset,\n      setGameboards,\n      setPlayer1,\n      setPlayer2,\n      switchPlayers,\n      winner,\n    },\n    setGame,\n  ] = useGame();\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState();\n\n  const initializeGame = (num) => {\n    reset(num);\n  };\n\n  const updatePlayerBoard = (gameboard) => {\n    setPlayer1(player1Turn ? Player(player1.name, gameboard) : player1);\n    setPlayer2(player1Turn ? player2 : Player(player2.name, gameboard));\n  };\n\n  const saveBoard = (gameboard) => {\n    updatePlayerBoard(gameboard);\n    setGameboards((prev) => prev + 1);\n    if (players === 2) switchPlayers();\n  };\n\n  const countingDown = () => {\n    setLoading(true);\n    setCount(2);\n\n    const counterId = setInterval(() => {\n      setCount((prev) => prev - 1);\n    }, 1000);\n\n    setTimeout(() => {\n      setLoading(false);\n      clearInterval(counterId);\n    }, 2000);\n  };\n\n  const handleClick = (index) => {\n    if (!winner()) {\n      setGame(index);\n      if (players === 2) countingDown();\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Feedback\n        players={players}\n        gameboards={gameboards}\n        player1Turn={player1Turn}\n        info={message}\n        winner={winner()}\n      />\n\n      {/* If number of players is not set or there is a winner */}\n      {!players && <ChoosePlayers onClick={initializeGame} />}\n\n      {/* If the number of initialized boards does not equal the number of players */}\n      {!!players && gameboards !== players && (\n        <Board\n          dnd\n          gameboards={gameboards}\n          gameboard={player1Turn ? player1.gameboard : player2.gameboard}\n          updateBoard={updatePlayerBoard}\n          boardInit={saveBoard}\n        />\n      )}\n\n      {/* Main game phase */}\n      {!!players && gameboards === players && !loading && (\n        <DashBoard\n          player1={player1}\n          player2={player2}\n          player1Turn={player1Turn}\n          handleClick={handleClick}\n        />\n      )}\n\n      {/* When loading */}\n      {loading && !winner() && <div>{`in ${count}s`}</div>}\n\n      {/* When there is a winner */}\n      {winner() && <ChoosePlayers onClick={initializeGame} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={HTML5Backend}>\n      <App />\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}